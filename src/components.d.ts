/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ICard } from "./components/w-card/w-card.interface";
import { TypographyVariant } from "./components/w-typography/w-typography";
export namespace Components {
    interface WApp {
    }
    interface WBox {
        "padding": 'default' | 'small' | 'large';
    }
    interface WBtn {
        "color": 'primary' | 'secondary' | 'default';
        "size": 'small' | 'medium' | 'large';
        "variant": 'text' | 'contained' | 'outlined';
    }
    interface WCard {
        "card": ICard;
    }
    interface WCardList {
        "cards": ICard[];
    }
    interface WHeader {
    }
    interface WTypography {
        "variant": TypographyVariant;
    }
}
declare global {
    interface HTMLWAppElement extends Components.WApp, HTMLStencilElement {
    }
    var HTMLWAppElement: {
        prototype: HTMLWAppElement;
        new (): HTMLWAppElement;
    };
    interface HTMLWBoxElement extends Components.WBox, HTMLStencilElement {
    }
    var HTMLWBoxElement: {
        prototype: HTMLWBoxElement;
        new (): HTMLWBoxElement;
    };
    interface HTMLWBtnElement extends Components.WBtn, HTMLStencilElement {
    }
    var HTMLWBtnElement: {
        prototype: HTMLWBtnElement;
        new (): HTMLWBtnElement;
    };
    interface HTMLWCardElement extends Components.WCard, HTMLStencilElement {
    }
    var HTMLWCardElement: {
        prototype: HTMLWCardElement;
        new (): HTMLWCardElement;
    };
    interface HTMLWCardListElement extends Components.WCardList, HTMLStencilElement {
    }
    var HTMLWCardListElement: {
        prototype: HTMLWCardListElement;
        new (): HTMLWCardListElement;
    };
    interface HTMLWHeaderElement extends Components.WHeader, HTMLStencilElement {
    }
    var HTMLWHeaderElement: {
        prototype: HTMLWHeaderElement;
        new (): HTMLWHeaderElement;
    };
    interface HTMLWTypographyElement extends Components.WTypography, HTMLStencilElement {
    }
    var HTMLWTypographyElement: {
        prototype: HTMLWTypographyElement;
        new (): HTMLWTypographyElement;
    };
    interface HTMLElementTagNameMap {
        "w-app": HTMLWAppElement;
        "w-box": HTMLWBoxElement;
        "w-btn": HTMLWBtnElement;
        "w-card": HTMLWCardElement;
        "w-card-list": HTMLWCardListElement;
        "w-header": HTMLWHeaderElement;
        "w-typography": HTMLWTypographyElement;
    }
}
declare namespace LocalJSX {
    interface WApp {
    }
    interface WBox {
        "padding"?: 'default' | 'small' | 'large';
    }
    interface WBtn {
        "color"?: 'primary' | 'secondary' | 'default';
        "size"?: 'small' | 'medium' | 'large';
        "variant"?: 'text' | 'contained' | 'outlined';
    }
    interface WCard {
        "card"?: ICard;
        "onAddToCard"?: (event: CustomEvent<ICard>) => void;
        "onAddToList"?: (event: CustomEvent<ICard>) => void;
    }
    interface WCardList {
        "cards"?: ICard[];
    }
    interface WHeader {
    }
    interface WTypography {
        "variant"?: TypographyVariant;
    }
    interface IntrinsicElements {
        "w-app": WApp;
        "w-box": WBox;
        "w-btn": WBtn;
        "w-card": WCard;
        "w-card-list": WCardList;
        "w-header": WHeader;
        "w-typography": WTypography;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "w-app": LocalJSX.WApp & JSXBase.HTMLAttributes<HTMLWAppElement>;
            "w-box": LocalJSX.WBox & JSXBase.HTMLAttributes<HTMLWBoxElement>;
            "w-btn": LocalJSX.WBtn & JSXBase.HTMLAttributes<HTMLWBtnElement>;
            "w-card": LocalJSX.WCard & JSXBase.HTMLAttributes<HTMLWCardElement>;
            "w-card-list": LocalJSX.WCardList & JSXBase.HTMLAttributes<HTMLWCardListElement>;
            "w-header": LocalJSX.WHeader & JSXBase.HTMLAttributes<HTMLWHeaderElement>;
            "w-typography": LocalJSX.WTypography & JSXBase.HTMLAttributes<HTMLWTypographyElement>;
        }
    }
}
